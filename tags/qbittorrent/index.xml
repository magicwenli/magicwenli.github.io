<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>qBittorrent on Great Expectations</title><link>/tags/qbittorrent/</link><description>Recent content in qBittorrent on Great Expectations</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Apr 2022 00:00:00 +0800</lastBuildDate><atom:link href="/tags/qbittorrent/index.xml" rel="self" type="application/rss+xml"/><item><title>qBittorrent 的一些事儿</title><link>/posts/usage-of-qbittorrent/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0800</pubDate><guid>/posts/usage-of-qbittorrent/</guid><description>Introduction 大学4年即将结束，回想这段时间。有时一个机缘巧合，我们就会被吸引并走进一个新的世界。PT就是我在大一期间认识到的，这种Freeeee的感觉</description><content>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>大学4年即将结束，回想这段时间。有时一个机缘巧合，我们就会被吸引并走进一个新的世界。PT就是我在大一期间认识到的，这种Freeeee的感觉太好了。后来组了自己的NAS，装入大容量硬盘，开启我的下载做种之路。&lt;/p>
&lt;p>有时会遇到种子掉线的问题，虽然出现的频率很低，但每次出现都让人困恼不已。具体情况是因为torrent下载工具和NAS不在同一个设备上，每当突然掉电后，恢复启动的torrent下载工具无法确定种子进度，于是种子进度干脆显示成0%。要想恢复做种进度，需要对所有种子重新进行散列检测。&lt;/p>
&lt;p>对于数以TB的文件，重新检测不仅需要大量的时间，而且会消耗大量的硬盘写入量，这对无论哪种硬盘都是一个灾难。&lt;/p>
&lt;p>之前开发过qBittorrent和uTorrent的备份工具，没有达到预期效果。&lt;/p>
&lt;p>今天看到了&lt;a href="https://tomorrow505.xyz/%E5%9F%BA%E4%BA%8Eqbittorrentapi%E5%AE%9E%E7%8E%B0%E6%89%B9%E9%87%8F%E5%8A%A0%E8%BD%BD%E7%A7%8D%E5%AD%90%E8%B7%B3%E6%A3%80/">这篇文章&lt;/a>，感觉很有参考意义。本文就是在此基础上做的一点修改。&lt;/p>
&lt;h2 id="qbittorrent-api">qbittorrent-api&lt;/h2>
&lt;p>&lt;a href="https://github.com/rmartin16/qbittorrent-api">qbittorrent-api&lt;/a> 是qBittorrent Web API的Python实现。&lt;a href="https://qbittorrent-api.readthedocs.io/en/latest/introduction.html">RTD&lt;/a>&lt;/p>
&lt;p>它支持qBittorrent v4.1.0+版本，基本实现了所有API。&lt;/p>
&lt;p>支持的版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> qbittorrentapi &lt;span style="color:#f92672">import&lt;/span> Version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>versions &lt;span style="color:#f92672">=&lt;/span> Version&lt;span style="color:#f92672">.&lt;/span>supported_app_versions()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(sorted(versions))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># [&amp;#39;v4.1.0&amp;#39;, &amp;#39;v4.1.1&amp;#39;, &amp;#39;v4.1.2&amp;#39;, &amp;#39;v4.1.3&amp;#39;, &amp;#39;v4.1.4&amp;#39;, &amp;#39;v4.1.5&amp;#39;, &amp;#39;v4.1.6&amp;#39;, &amp;#39;v4.1.7&amp;#39;, &amp;#39;v4.1.8&amp;#39;, &amp;#39;v4.1.9&amp;#39;, &amp;#39;v4.1.9.1&amp;#39;, &amp;#39;v4.2.0&amp;#39;, &amp;#39;v4.2.1&amp;#39;, &amp;#39;v4.2.2&amp;#39;, &amp;#39;v4.2.3&amp;#39;, &amp;#39;v4.2.4&amp;#39;, &amp;#39;v4.2.5&amp;#39;, &amp;#39;v4.3.0&amp;#39;, &amp;#39;v4.3.0.1&amp;#39;, &amp;#39;v4.3.1&amp;#39;, &amp;#39;v4.3.2&amp;#39;, &amp;#39;v4.3.3&amp;#39;, &amp;#39;v4.3.4.1&amp;#39;, &amp;#39;v4.3.5&amp;#39;, &amp;#39;v4.3.6&amp;#39;, &amp;#39;v4.3.7&amp;#39;, &amp;#39;v4.3.8&amp;#39;, &amp;#39;v4.3.9&amp;#39;, &amp;#39;v4.4.0&amp;#39;, &amp;#39;v4.4.1&amp;#39;, &amp;#39;v4.4.2&amp;#39;]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>qBittorrent有许多版本，有些版本API变化很大。&lt;a href="https://github.com/qbittorrent/qBittorrent/wiki#user-content-webui-api">官方WIKI&lt;/a>中将WebUI API划为三个版本。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>State&lt;/th>
&lt;th>Version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Current&lt;/td>
&lt;td>qBittorrent v4.1+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Previous&lt;/td>
&lt;td>qBittorrent v3.2.0-v4.0.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Obsolete&lt;/td>
&lt;td>qBittorrent v3.1.x&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>有一些PT站点限定使用&lt;code>v3.*.*&lt;/code>版本，这样的话，就需要自己更新API了。&lt;/p>
&lt;p>例如&lt;/p>
&lt;ul>
&lt;li>&lt;code>v3.*.*&lt;/code>的login接口为 &lt;code>http://localhost:8080/login&lt;/code>&lt;/li>
&lt;li>&lt;code>v4.1.*&lt;/code>的login接口为&lt;code>http://localhost:8080/api/v2/auth/login&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>要寻找合适的版本，参考PT站的常见问题和&lt;a href="https://sourceforge.net/projects/qbittorrent/files/qbittorrent-win32/">sourceforge&lt;/a>.&lt;/p>
&lt;h2 id="qbittorrent-跳过检测">qBittorrent 跳过检测&lt;/h2>
&lt;p>根据&lt;a href="https://github.com/7sDream/torrent_parser/issues/11">torrent_parser issue#11&lt;/a>, &lt;code>torrent_parser.py#L46&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>from typing_extensions import OrderedDict
&lt;/code>&lt;/pre>&lt;p>是误加入，应该手动删除。&lt;/p>
&lt;p>&lt;code>BitTorrent&lt;/code>fastresume文件的解析包&lt;code>bencode&lt;/code>似乎不支持python3了，这里使用&lt;code>bencodepy&lt;/code>作为替代。&lt;/p>
&lt;div class="collapsable-code">
&lt;input id="1" type="checkbox" />
&lt;label for="1">
&lt;span class="collapsable-code__language">python&lt;/span>
&lt;span class="collapsable-code__title">完整代码&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-python" >&lt;code>
from qbittorrentapi import Client, LoginFailed
import torrent_parser as tp
from yaml import load
import os
import hashlib
import bencodepy
try:
from yaml import CLoader as Loader
except ImportError:
from yaml import Loader
def get_qb(config):
# 获取客户端实例
qb = Client(host=&amp;#39;%s:%s&amp;#39; % (config[&amp;#39;ip&amp;#39;], config[&amp;#39;port&amp;#39;]), username=config[&amp;#39;user&amp;#39;], password=config[&amp;#39;pwd&amp;#39;])
# 客户端进行登录
try:
qb.auth_log_in()
except LoginFailed as e:
print(e)
# 输出客户端信息
print(f&amp;#39;qBittorrent: {qb.app.version}&amp;#39;)
print(f&amp;#39;qBittorrent Web API: {qb.app.web_api_version}&amp;#39;)
print()
return qb
# 根据种子路径获取其hash值
def get_hash(filename):
with open(filename, &amp;#39;rb&amp;#39;) as f:
torrent_data = f.read()
metainfo = bencodepy.decode(torrent_data)
info = metainfo[b&amp;#39;info&amp;#39;]
return hashlib.sha1(bencodepy.encode(info)).hexdigest()
# 加载配置文件
def load_config():
data = load(open(&amp;#39;./config.yml&amp;#39;, &amp;#39;rb&amp;#39;), Loader=Loader)
return data
# 获取种子文件列表信息
def pars_torrent(path):
file_paths = []
data = tp.parse_torrent_file(path)
info = dict(data[&amp;#39;info&amp;#39;])
if &amp;#39;files&amp;#39; in info.keys():
for item in info[&amp;#39;files&amp;#39;]:
file_paths.append(info[&amp;#39;name&amp;#39;] &amp;#43; &amp;#39;\\&amp;#39; &amp;#43; &amp;#39;\\&amp;#39;.join(item[&amp;#39;path&amp;#39;]))
else:
file_paths.append(info[&amp;#39;name&amp;#39;])
return file_paths
# 主程序入口
if __name__ == &amp;#39;__main__&amp;#39;:
user_info = load_config()
qb = get_qb(user_info[&amp;#39;qb&amp;#39;])
save_paths = user_info[&amp;#39;save_path&amp;#39;]
# 输入种子所在目录
torrents_path = input(&amp;#34;请输入种子保存路径&amp;gt;&amp;gt;&amp;#34;)
files = os.listdir(torrents_path)
# 循环处理种子信息
for file in files:
if not file.endswith(&amp;#39;.torrent&amp;#39;):
continue
print(&amp;#34;*********************** 当前处理种子文件：%s ***********************&amp;#34; % file)
torrent_path = os.path.join(torrents_path, file)
# 种子已经存在于客户端，跳过
hash_value = get_hash(torrent_path)
torrent = qb.torrents_info(torrent_hashes=hash_value)
if len(torrent) == 1:
print(&amp;#34;当前种子已经存在于客户端，跳出……&amp;#34;)
continue
# 判断种子文件是否存在于常用的保存路径
torrent_files = pars_torrent(torrent_path)
print(&amp;#39;种子文件包含%d个文件&amp;#39;%len(torrent_files))
for save_path in save_paths:
flag = True
for torrent_file in torrent_files:
if not os.path.isfile(os.path.join(save_path, torrent_file)):
print(&amp;#39;%s 文件不存在，跳出……&amp;#39; % os.path.join(save_path, torrent_file))
flag = False
break
if flag == True:
qb.torrents_add(torrent_files=torrent_path, save_path=save_path, is_skip_checking=True, is_paused=True)
print(&amp;#39;种子检验完毕，保存路径为%s，已经添加！！&amp;#39; % save_path)
&lt;/code>&lt;/pre>
&lt;/div>
&lt;pre tabindex="0">&lt;code>qBittorrent: v4.1.4
qBittorrent Web API: 2.1.1
*********************** 当前处理种子文件：Severance.S01.1080p.ATVP.WEB-DL.DDP5.1.Atmos.H.264-TEPES.torrent ***********************
种子文件包含9个文件
种子检验完毕，保存路径为Y:\Transmission\DOWNLOADS，已经添加！！
&lt;/code>&lt;/pre>
&lt;div class="collapsable-code">
&lt;input id="2" type="checkbox" />
&lt;label for="2">
&lt;span class="collapsable-code__language">yaml&lt;/span>
&lt;span class="collapsable-code__title">config.yml&lt;/span>
&lt;span class="collapsable-code__toggle" data-label-expand="Show" data-label-collapse="Hide">&lt;/span>
&lt;/label>
&lt;pre class="language-yaml" >&lt;code>
qb:
ip: &amp;#39;192.168.123.189&amp;#39;
port: &amp;#39;12345&amp;#39;
user: admin
pwd: adminadmin
save_path:
- Y:\Transmission\DOWNLOADS
&lt;/code>&lt;/pre>
&lt;/div></content></item></channel></rss>