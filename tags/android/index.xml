<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Great Expectations</title><link>/tags/android/</link><description>Recent content in Android on Great Expectations</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Nov 2021 02:37:41 +0800</lastBuildDate><atom:link href="/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Android 抓包之歪路</title><link>/posts/android-emulator-packet-capture-and-everything/</link><pubDate>Fri, 26 Nov 2021 02:37:41 +0800</pubDate><guid>/posts/android-emulator-packet-capture-and-everything/</guid><description>最佳实践 Android 5.1 安装夜神模拟器，打开夜神多开器，添加Android版本为5.1的模拟器。下载完成后启动。 下载Fiddler Everywhere。</description><content>&lt;h2 id="最佳实践">最佳实践&lt;/h2>
&lt;h3 id="android-51">Android 5.1&lt;/h3>
&lt;ol>
&lt;li>安装&lt;code>夜神&lt;/code>模拟器，打开夜神多开器，添加Android版本为5.1的模拟器。下载完成后启动。&lt;/li>
&lt;li>下载&lt;code>Fiddler Everywhere&lt;/code>。Setting—Https—Advanced Setting—Export root certificate.&lt;/li>
&lt;li>将桌面的&lt;code>FiddlerRootCertificate.crt&lt;/code>复制到&lt;code>C:\Users\&amp;lt;UserName&amp;gt;\Nox_share\Download&lt;/code>，此处为共享路径。&lt;/li>
&lt;li>在模拟器中手动安装证书。设置—安全—从SD卡安装。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../../static/img/Snipaste_2021-11-26_01-12-38.png" alt="Snipaste_2021-11-26_01-12-38">&lt;/p>
&lt;ol start="5">
&lt;li>设置WiFi代理。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../../static/img/Snipaste_2021-11-26_01-17-55.png" alt="Snipaste_2021-11-26_01-17-55">&lt;/p>
&lt;ol start="6">
&lt;li>OK&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="../../static/img/Snipaste_2021-11-26_01-27-55.png" alt="Snipaste_2021-11-26_01-27-55">&lt;/p>
&lt;h3 id="android-70">Android 7.0&lt;/h3>
&lt;p>安装Android版本为7.0的模拟器，在添加完毕证书后，进行一个额外的步骤。&lt;/p>
&lt;p>通过adb工具将用户证书添加到&lt;strong>系统证书&lt;/strong>中，先确保adb已连接，见&lt;a href="#ADB">ADB&lt;/a>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#75715e"># WSL ubuntu 18.04&lt;/span>
HASH_FILE_NAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>adb shell ls /data/misc/user/0/cacerts-added&lt;span style="color:#66d9ef">)&lt;/span>
echo &lt;span style="color:#e6db74">&amp;#34;HASH_FILE_NAME: &lt;/span>$HASH_FILE_NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
adb pull /data/misc/user/0/cacerts-added/$HASH_FILE_NAME
adb push $HASH_FILE_NAME /system/etc/security/cacerts/
adb shell ls -lt /system/etc/security/cacerts/ | head -5
echo &lt;span style="color:#e6db74">&amp;#34;Add system certs successful&amp;#34;&lt;/span>
rm $HASH_FILE_NAME
&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置代理，或者通过&lt;code>Proxifier&lt;/code>添加一个端口为8866的http代理服务器，与一条&lt;code>nox*.exe&lt;/code> proxy的代理规则。&lt;/p>
&lt;h2 id="防止失忆做的补充">防止失忆做的补充&lt;/h2>
&lt;h3 id="抓包工具">抓包工具&lt;/h3>
&lt;h4 id="fiddler">Fiddler&lt;/h4>
&lt;p>Fiddler现在分了&lt;code>classic&lt;/code>和&lt;code>everywhere&lt;/code>两个版本，这两版基本功能都一样，各有特点。&lt;/p>
&lt;p>后者在UI上做了升级，显示内容比较直观，更加Accessible。新UI给人一股Postman味，这是一句夸奖的话。必须&lt;strong>登录账户&lt;/strong>才能使使用，提供了云服务，同时以订阅制收费。&lt;/p>
&lt;p>老版本也能照常使用，有很多强大的开源插件，比如&lt;a href="https://github.com/lulianqi/FreeHttp">FreeHttp&lt;/a>。在网页中访问&lt;code>http://localhost:&amp;lt;proxy-port&amp;gt;&lt;/code>，里面就有证书的下载链接。&lt;/p>
&lt;p>它们的使用过程都是打开代理—允许远程访问—生成证书。不过我在用&lt;code>classic&lt;/code>版时，远程应用无论如何都连接不到代理上，用新版没有问题。&lt;/p>
&lt;h4 id="postman">Postman&lt;/h4>
&lt;p>感觉这个公司的工具非常有极客精神，他们的产品既好用，又&lt;code>Free of use&lt;/code>。通过代理抓包只是它的一个小功能，设置好端口，按照&lt;a href="https://learning.postman.com/docs/sending-requests/capturing-request-data/capturing-http-requests/#capture-https-traffic-with-postmans-built-in-proxy">官方文档&lt;/a>里说的做就好。记得下载安装 &lt;a href="https://slproweb.com/products/Win32OpenSSL.html">OpenSSL v1.1.1L&lt;/a>的时候不要选带Light的版本，安装完毕后重启Postman，随后就能在&lt;code>%APPDATA%\Postman\proxy&lt;/code>找到证书&lt;code>postman-proxy-ca.crt&lt;/code>。&lt;/p>
&lt;p>&lt;img src="../../static/img/Snipaste_2021-11-26_01-57-36.png" alt="Snipaste_2021-11-26_01-57-36">&lt;/p>
&lt;h4 id="proxifier">Proxifier&lt;/h4>
&lt;p>这个工具是专门给程序设置代理的。有时有为每个程序分别设置代理的需求，程序本身提供代理设置的还好说（但手工管理它们也不轻松），没有这个选项的那就只能使用&lt;code>Proxifier&lt;/code>这类工具了。&lt;/p>
&lt;p>手工设置Android代理，就是填写WiFi设置中的高级选项。&lt;/p>
&lt;h3 id="证书">证书&lt;/h3>
&lt;p>用自己的手机是可行的，不过用虚拟机是更稳妥的选择。抓包的时候会安装证书，手机自带的证书是&lt;strong>系统证书&lt;/strong>，而我们之后安装的证书是&lt;strong>用户证书&lt;/strong>，两者的级别和权限是不一样的。&lt;/p>
&lt;p>7.0之后的Android就不再&lt;strong>信任用户证书&lt;/strong>了。所以在进行抓包时，数据并不走&lt;strong>用户证书&lt;/strong>，App也会发出一个不再信任证书的警告，也就抓不到包。而5.1版本，系统信任&lt;strong>用户证书&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="../../static/img/Snipaste_2021-11-26_01-18-05.png" alt="Snipaste_2021-11-26_01-18-05">&lt;/p>
&lt;p>这里我走了一些弯路，不过总结一下可以找到3种使得证书信任的方法：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>直接安装5.1系统，随后安装证书（设置-安全-从SDCard安装证书）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装7.0或以上的系统，想办法将我们的证书添加到&lt;strong>系统证书&lt;/strong>[4]。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装7.0或以上的系统，安装&lt;code>xposed&lt;/code>，hook certificate pinning，使得app跳过证书校验[7]。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="android虚拟机">Android虚拟机&lt;/h3>
&lt;p>这方面尝试的不多，自己仅用过&lt;code>蓝叠(Bluestacks)&lt;/code>，&lt;code>夜神(Nox)&lt;/code>和&lt;code>Genymotion&lt;/code>。听说网易&lt;code>MoMo&lt;/code>也不错，最后用的是夜神。&lt;/p>
&lt;p>刚好三种都分别安装、卸载了一遍。&lt;/p>
&lt;p>&lt;code>Genymotion&lt;/code>安装好了直接无法启动虚拟机，G了。&lt;/p>
&lt;p>&lt;code>蓝叠&lt;/code>的Rom定制化程度很高，换句话说就是与原生系统差别比较大。系统设置里许多地方缺失了，好像没找到添加证书的入口。它除广告外还自带了Chrome和另一些常用工具，甚好。&lt;/p>
&lt;p>&lt;code>夜神&lt;/code>这款基本上满足了抓包的需要。自带Root权限，这样就可以装&lt;code>Xposed&lt;/code>，还可以装&lt;code>Termux&lt;/code>玩玩。有个官方论坛有许多交流帖子，国外也有很多人用。遇到问题比较容易解决。&lt;/p>
&lt;h3 id="adb">ADB&lt;/h3>
&lt;p>打开USB调试。&lt;code>夜神&lt;/code>的USB调试并不通过默认的5037 端口与adb客户端通信，可能是考虑多开也许超过16个客户端的官方限制。&lt;/p>
&lt;p>一般情况下，只需以下步骤就能连接adb&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#75715e"># WSL ubuntu 18.04&lt;/span>
wesley@WIN10:/mnt/c/Users/Vita/Desktop$ adb devices
List of devices attached
wesley@WIN10:/mnt/c/Users/Vita/Desktop$ adb connect 127.0.0.1:62001
connected to 127.0.0.1:62001
wesley@WIN10:/mnt/c/Users/Vita/Desktop$ adb devices
List of devices attached
127.0.0.1:62001 device
&lt;/code>&lt;/pre>&lt;/div>&lt;p>虚拟机比较多时就无效了，需要手动找到端口[3]。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="color:#75715e"># Powershell&lt;/span>
PS C:\Users\Vita&amp;gt; Get-Process | where name &lt;span style="color:#f92672">-like&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Nox*&amp;#34;&lt;/span>
Handles NPM(K) PM(K) WS(K) CPU(s) Id SI ProcessName
------- ------ ----- ----- ------ -- -- -----------
1037 184 177620 49000 161.20 28604 1 Nox
2006 173 1046392 46020 251.53 4716 1 NoxVMHandle
3058 16 6268 19040 0.67 27528 1 NoxVMSVC
PS C:\Users\Vita&amp;gt; Get-NetTcpConnection -OwningProcess 4716 -State Listen
LocalAddress LocalPort RemoteAddress RemotePort State AppliedSetting
------------ --------- ------------- ---------- ----- --------------
127.0.0.1 64001 0.0.0.0 0 Listen
127.0.0.1 63001 0.0.0.0 0 Listen
127.0.0.1 62001 0.0.0.0 0 Listen
127.0.0.1 61001 0.0.0.0 0 Listen
&lt;/code>&lt;/pre>&lt;/div>&lt;p>依次尝试连接这些&lt;code>LocalPort&lt;/code>，验证&lt;code>adb devices&lt;/code>是否正常。&lt;/p>
&lt;h2 id="参考文档">参考文档&lt;/h2>
&lt;p>[1]loco, “当你写爬虫抓不到APP请求包的时候该怎么办？【中级篇】,” &lt;em>知乎专栏&lt;/em>, 2019. &lt;a href="https://zhuanlan.zhihu.com/p/56397466">https://zhuanlan.zhihu.com/p/56397466&lt;/a> (accessed Nov. 25, 2021).&lt;/p>
&lt;p>[2]空夜无殇, “手机抓不到包的原因与解决方法（非xposed框架）,” &lt;em>知乎专栏&lt;/em>, 2021. &lt;a href="https://zhuanlan.zhihu.com/p/349267640">https://zhuanlan.zhihu.com/p/349267640&lt;/a> (accessed Nov. 25, 2021).&lt;/p>
&lt;p>[3]Mateusz, “ADB can’t connect to Nox,” &lt;em>Stack Overflow&lt;/em>, Jul. 06, 2018. &lt;a href="https://stackoverflow.com/questions/51214825/adb-cant-connect-to-nox">https://stackoverflow.com/questions/51214825/adb-cant-connect-to-nox&lt;/a> (accessed Nov. 25, 2021).&lt;/p>
&lt;p>[4]pwlin, “Android : add cert to system store,” &lt;em>Gist&lt;/em>, Mar. 07, 2016. &lt;a href="https://gist.github.com/pwlin/8a0d01e6428b7a96e2eb">https://gist.github.com/pwlin/8a0d01e6428b7a96e2eb&lt;/a> (accessed Nov. 25, 2021).&lt;/p>
&lt;p>[5]“Capturing HTTP requests,” &lt;em>Postman Learning Center&lt;/em>, 2021. &lt;a href="https://learning.postman.com/docs/sending-requests/capturing-request-data/capturing-http-requests/#capture-https-traffic-with-postmans-built-in-proxy">https://learning.postman.com/docs/sending-requests/capturing-request-data/capturing-http-requests/#capture-https-traffic-with-postmans-built-in-proxy&lt;/a> (accessed Nov. 25, 2021).&lt;/p>
&lt;p>[6]用户1470878743, “7.x系统的夜神安装Xposed - 辅助工具 夜神游戏论坛,” &lt;em>Yeshen.com&lt;/em>, 2021. &lt;a href="https://bbs.yeshen.com/forum.php?mod=viewthread&amp;amp;tid=33446">https://bbs.yeshen.com/forum.php?mod=viewthread&amp;amp;tid=33446&lt;/a> (accessed Nov. 25, 2021).&lt;/p>
&lt;p>[7]ac-pm, “SSLUnpinning_Xposed: Android Xposed Module to bypass SSL certificate validation (Certificate Pinning).,” &lt;em>GitHub&lt;/em>, 2021. &lt;a href="https://github.com/ac-pm/SSLUnpinning_Xposed">https://github.com/ac-pm/SSLUnpinning_Xposed&lt;/a> (accessed Nov. 25, 2021).&lt;/p></content></item></channel></rss>